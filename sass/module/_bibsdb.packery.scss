/**
 * Packery configuration
 *
 * @author agms
 */



/* Variables
========================================================================== */

$gutter: 3%;
$col1gutter: 8%;

//col1
$col1width1: 100%; // 1/colnum*100% - gutternum/colnum * gutterwidth
$col1height1: 100%;
$col1height15: (1/1 * 100%) * 3/2 + $gutter;
$col1height3: (1/1 * 100%) * 3 + 2 * $gutter;

//col2
$col2width1: (1/2 * 100%) - (1/2 * $gutter); // 1/colnum*100% - gutternum/colnum * gutterwidth
$col2width2: ((1/2 * 100%) - (1/2 * $gutter)) * 2 + $gutter;
$col2height15: ((1/2 * 100%) - (1/2 * $gutter)) * 3/2 + $gutter;
$col2height169: ((1/2 * 100%) - (1/2 * $gutter)) * 9/16;
$col2height06: ((1/2 * 100%) - (1/2 * $gutter)) * 6/10;
$col2height1: ((1/2 * 100%) - (1/2 * $gutter));

//col3
$col3width1: (1/3 * 100%) - (2/3 * $gutter); // 1/colnum*100% - gutternum/colnum * gutterwidth
$col3width2: ((1/3 * 100%) - (2/3 * $gutter)) * 2 + $gutter;
$col3width05: ((1/3 * 100%) - (2/3 * $gutter)) * 1/2;
$col3height1: ((1/3 * 100%) - (2/3 * $gutter));
$col3height169: ((1/3 * 100%) - (2/3 * $gutter)) * 9/16;
$col3height06: ((1/3 * 100%) - (2/3 * $gutter)) * 6/10;
$col3height15: ((1/3 * 100%) - (2/3 * $gutter)) * 3/2 + 3%; // + 4% replaced with + 3% to make it inline with 2col-height1
$col3width25: ((1/3 * 100%) - (2/3 * $gutter)) * 5/2 + $gutter;
$col3height2: ((1/3 * 100%) - (2/3 * $gutter)) * 2 + $gutter;




/* Sizing
========================================================================== */

.packery {

	.colwidth {
		width: (1/12 * 100%);
	}

	.gutterwidth {
		width: $gutter;
	}

	&.col1{
		.gutterwidth {
			width: $col1gutter;
		}
		@media only screen and (max-width: $breakpoint-large) {
			.gutterwidth {
				width: $gutter;
			}
		}
	}
}

.packery {

	.brick { 
		float: left;
		position: relative;
		height: 0;

		.container {
			width: 100%;
			height: 100%;
			position: absolute;
			left: 0;
			overflow: hidden;
		}


		&.col1 {
			&.w1 {
				width: $col1width1;
				@media only screen and (max-width: $breakpoint-large) {
					width: $col2width1;
				}
			}
			&.h1 {
				padding-bottom: $col1height1;
				@media only screen and (max-width: $breakpoint-large) {
					padding-bottom: $col2height1;
				}
			}
			&.h15 {
				padding-bottom: $col1height15;
				@media only screen and (max-width: $breakpoint-large) {
					padding-bottom: $col2height15;
				}
			}
			&.h3 {
				padding-bottom: $col1height3;
			}
		}

		&.col2 {
			&.w1 {
				width: $col2width1;
			}
			&.w2 {
				width: $col2width2;
			}
			&.h1 {
				padding-bottom: $col2height1;
			}
			&.h15 {
				padding-bottom: $col2height15;
			}
			&.h169 {
				padding-bottom: $col2height169;
			}
			&.h06 {
				padding-bottom: $col2height06;
			}
		}

		&.col3 {
			&.w1 {
				width: $col3width1;
				@media only screen and (max-width: $breakpoint-large) {
					width: $col2width1;
				}
			}
			&.w2 {
				width: $col3width2;
				@media only screen and (max-width: $breakpoint-large) {
					width: $col2width2;
				}
			}
			&.h169 {
				padding-bottom: $col3height169;
				@media only screen and (max-width: $breakpoint-large) {
					padding-bottom: $col2height169;
				}
			}
			&.h06 {
				padding-bottom: $col3height06;
				@media only screen and (max-width: $breakpoint-large) {
					padding-bottom: $col2height06;
				}
			}
			&.h1 {
				padding-bottom: $col3height1;
				@media only screen and (max-width: $breakpoint-large) {
					padding-bottom: $col2height1;
				}
			}
		}

	}
	
}


/* Basic configuration
========================================================================== */
.wall {
	background-color: $white;
	padding-top: 1.5%;
	@media only screen and (max-width: $breakpoint-large) {
		padding-top: $gutter;
	}

	&.front {
		padding: 10px 0;
	}

	&.nocontent {
		display: none;
	}
	&.nocontent.editormode {
		clear: both;
		padding: 0;
		display: block;

		.brick {
			width: 100%;
			padding-bottom: 20px;
			.container {
				background-color: yellow;
				margin: 2px;
			}
		}
	}	
}




	.packery {
		background-color: $white;

		.brick {
			font-family: $font-bold;
			word-wrap: break-word;

			.container {
				background-color: $white;
			}

			@include low() {
				font-size: $font-size-tiny;
				line-height: $font-size-medium;
			}

			@include small() {
				font-size: $font-size-reset;
				line-height: $font-size-medium;
			}

			@include medium() {
				font-size: $font-size-medium;
				line-height: $font-size-medium;
			}


			@include large() {
				font-size: $font-size-medium;
				line-height: $font-size-medium;
			}

			@include x-large() {
				font-size: $font-size-large;
				line-height: $font-size-medium;
			}


			a:link {
				color: $font-color-primary;
			}
			a:hover {
				color: $font-color-primary;
			}
			a:visited {
				color: $font-color-primary;
			}
		}
	}



/* Walls on ding_page and page_group
============================================================================ */

.node-type-ding-page .default-layout, .node-type-ding-group .default-layout, .node-type-new-materials .default-layout {

	.primary-content {
		@include zen-clear();
		@include zen-grid-container;
	}

	/* Page content */
	article.page, .pane-node-content, .pane-new-materials {
		@include zen-grid-item(12, 1);
		@include zen-clear();
	}


	/* All ellements except the first */
	.wall-title {
		padding-top: 50px;
	}
	
}






